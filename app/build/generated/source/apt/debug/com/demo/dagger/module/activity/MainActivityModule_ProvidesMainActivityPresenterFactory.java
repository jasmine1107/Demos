// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.demo.dagger.module.activity;

import com.demo.presenter.activity.MainActivityPresenter;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class MainActivityModule_ProvidesMainActivityPresenterFactory
    implements Factory<MainActivityPresenter> {
  private final MainActivityModule module;

  public MainActivityModule_ProvidesMainActivityPresenterFactory(MainActivityModule module) {
    assert module != null;
    this.module = module;
  }

  @Override
  public MainActivityPresenter get() {
    return Preconditions.checkNotNull(
        module.ProvidesMainActivityPresenter(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<MainActivityPresenter> create(MainActivityModule module) {
    return new MainActivityModule_ProvidesMainActivityPresenterFactory(module);
  }
}
